/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rf;

import java.awt.event.KeyEvent;
import javax.swing.table.DefaultTableModel;

/**
 * Ekran Menu Głównego
 * @author donata
 */
public class MainMenu extends GameState {
    Main main;
    /**
     * Creates new form MainMenu
     * @param main
     */
    public MainMenu(Main main) {
        initComponents();
        this.main = main;
        
        for (HighScore score : main.scores) {
            DefaultTableModel model = (DefaultTableModel)highScoreTable.getModel();
            model.addRow(new Object[]{score.date, score.score});
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TitleName = new javax.swing.JLabel();
        StartGame = new javax.swing.JButton();
        ExitToDesktop = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        highScoreTable = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();

        TitleName.setFont(new java.awt.Font("Noto Sans", 0, 48)); // NOI18N
        TitleName.setText("Rocket Fever");

        StartGame.setText("Rozpocznij grę");
        StartGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartGameActionPerformed(evt);
            }
        });

        ExitToDesktop.setText("Wyjście z gry");
        ExitToDesktop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitToDesktopActionPerformed(evt);
            }
        });

        highScoreTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Data", "Wynik"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(highScoreTable);

        jTextArea1.setColumns(20);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setText("Gra polega na kierowaniu rakiet za pomocą strzałek (w lewo, w prawo) na klawiaturze do celu.\nZadaniem gracza jest dopasowanie wyświetlanego na ekranie słowa do odpowiedniej części mowy - rzeczownika, przymiotnika lub czasownika. Za każde poprawne dopasowanie gracz otrzymuje punkt.\nCelem gry jest uzyskanie jak największej liczby punktów w skończonym czasie.\nPo zakończeniu przelotu gracz steruje nową rakietą i musi dopasować nowe słowo, a poprzednio sterowana porusza się po planszy po poprzednio wyznaczonym torze.\nRakieta, którą w danej rundzie kieruje gracz jest koloru czerwonego, a te z poprzednich rund - koloru białego.\nPo uderzeniu w którąś z przeszkód, poprzednią rakietę lub w krawędź okna rakieta gracza zmniejsza prędkość o połowe. Rosnąca liczba rakiet na planszy stopniowo podnosi poziom trudności rozgrywki.\nW dowolnej chwili gracz może rozpocząć grę od nowa lub powtórzyć aktualną runde (czas rozrywki nie jest odnawiany).\nCzas przeznaczony na grę to 60 sekund, ale na planszy znajdują się 3 bonusy czasowe, które dodają po 10 sekund każdy.\n\nTrudnością gry są: klasyfikowanie słów według ich części mowy, odpowiednie planowanie trasy swojej rakiety i unikanie własnych.");
        jTextArea1.setWrapStyleWord(true);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel1.setText("Autor: Donata Deptuła");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(315, Short.MAX_VALUE)
                .addComponent(TitleName)
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(StartGame, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ExitToDesktop)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(TitleName))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(StartGame, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addComponent(ExitToDesktop)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void StartGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartGameActionPerformed
        
        main.changePanel(new GamePanel(main));
    }//GEN-LAST:event_StartGameActionPerformed

    private void ExitToDesktopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitToDesktopActionPerformed
        main.saveHighScores();
        main.dispose();
        System.exit(0);
    }//GEN-LAST:event_ExitToDesktopActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ExitToDesktop;
    private javax.swing.JButton StartGame;
    private javax.swing.JLabel TitleName;
    private javax.swing.JTable highScoreTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables

    @Override
    void keyPressed(KeyEvent e) {
        if (e.getKeyCode() == KeyEvent.VK_ESCAPE) {
            main.saveHighScores();
            main.dispose();
            System.exit(0);
        }
    }

    @Override
    void keyReleased(KeyEvent e) {
        
    }
}
